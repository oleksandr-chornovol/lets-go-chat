// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "github.com/oleksandr-chornovol/lets-go-chat/app/models"
	mock "github.com/stretchr/testify/mock"
)

// UserInterface is an autogenerated mock type for the UserInterface type
type UserInterface struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: user
func (_m *UserInterface) CreateUser(user models.User) (models.User, error) {
	ret := _m.Called(user)

	var r0 models.User
	if rf, ok := ret.Get(0).(func(models.User) models.User); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(models.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserByField provides a mock function with given fields: field, value
func (_m *UserInterface) GetUserByField(field string, value string) (models.User, error) {
	ret := _m.Called(field, value)

	var r0 models.User
	if rf, ok := ret.Get(0).(func(string, string) models.User); ok {
		r0 = rf(field, value)
	} else {
		r0 = ret.Get(0).(models.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(field, value)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsEmpty provides a mock function with given fields:
func (_m *UserInterface) IsEmpty() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
